---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-curvebs-provisioner
  namespace: {{ .Release.Namespace }}
  labels:
    release: {{ .Release.Name }}
    app: csi-curvebs-provisioner
spec:
  replicas: {{ .Values.controllerplugin.replicas }}
  selector:
    matchLabels:
      app: csi-curvebs-provisioner
  template:
    metadata:
      labels:
        app: csi-curvebs-provisioner
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-curvebs-provisioner
            topologyKey: kubernetes.io/hostname
      serviceAccountName: csi-curvebs-provisioner
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: csi-provisioner
        image: "{{ .Values.controllerplugin.provisioner.image }}"
        args:
        - "--csi-address=$(ADDRESS)"
        - "--v=5"
        - "--timeout=150s"
        - "--leader-election=true"
        - "--retry-interval-start=500ms"
        - "--feature-gates=Topology=false"
        env:
        - name: ADDRESS
          value: unix:///csi/csi-provisioner.sock
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        resources:
{{ toYaml .Values.controllerplugin.provisioner.resources | indent 10 }}
      - name: csi-attacher
        image: "{{ .Values.controllerplugin.attacher.image }}"
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        - "--leader-election=true"
        - "--retry-interval-start=500ms"
        env:
        - name: ADDRESS
          value: /csi/csi-provisioner.sock
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        resources:
{{ toYaml .Values.controllerplugin.attacher.resources | indent 10 }}
      - name: csi-resizer
        image: "{{ .Values.controllerplugin.resizer.image }}"
        args:
        - "--csi-address=$(ADDRESS)"
        - "--v=5"
        - "--timeout=150s"
        - "--leader-election"
        - "--retry-interval-start=500ms"
        - "--handle-volume-inuse-error=false"
        env:
        - name: ADDRESS
          value: /csi/csi-provisioner.sock
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        resources:
{{ toYaml .Values.controllerplugin.resizer.resources | indent 10 }}
      - name: csi-snapshotter
        image: "{{ .Values.controllerplugin.snapshotter.image }}"
        args:
          - "--csi-address=$(ADDRESS)"
          - "--v=5"
          - "--timeout=150s"
          - "--leader-election=true"
        env:
        - name: ADDRESS
          value: unix:///csi/csi-provisioner.sock
        securityContext:
          privileged: true
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        resources:
{{ toYaml .Values.controllerplugin.snapshotter.resources | indent 10 }}
      - name: csi-curveplugin
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        image: "{{ .Values.controllerplugin.plugin.image }}"
        args:
        - --endpoint=$(CSI_ENDPOINT)
        - --type=curvebs
        - --drivername={{ .Values.driverName }}
        - --nodeid=$(NODE_ID)
        - --snapshot-server={{ .Values.controllerplugin.snapshotServer }}
{{- if .Values.controllerplugin.debug.enabled }}
        - "--debug-port={{ .Values.controllerplugin.debug.port }}"
{{- end }}
        - --controller-server=true
{{- if .Values.controllerplugin.logToFile.enabled }}
        - --logtostderr=false
        - --log_dir=/var/log/csi-curvebs
{{- end }}
        - -v=4
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///csi/csi-provisioner.sock
        resources:
{{ toYaml .Values.controllerplugin.plugin.resources | indent 10 }}
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - mountPath: /etc/localtime
          name: localtime
{{- if .Values.controllerplugin.logToFile.enabled }}
        - mountPath: /var/log/csi-curvebs
          name: log
{{- end }}
      volumes:
      - name: socket-dir
        emptyDir:
          medium: Memory
      - hostPath:
          path: /etc/localtime
        name: localtime
{{- if .Values.controllerplugin.logToFile.enabled }}
      - hostPath:
          path: {{ .Values.controllerplugin.logToFile.hostDir }}
        name: log
{{- end -}}
{{- if .Values.controllerplugin.affinity }}
      affinity:
{{ toYaml .Values.controllerplugin.affinity . | indent 8 -}}
{{- end -}}
{{- if .Values.controllerplugin.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.controllerplugin.nodeSelector | indent 8 -}}
{{- end -}}
{{- if .Values.controllerplugin.tolerations }}
      tolerations:
{{ toYaml .Values.controllerplugin.tolerations | indent 8 -}}
{{- end -}}
